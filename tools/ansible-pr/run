#!/usr/bin/env ruby
# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$LOAD_PATH.unshift File.dirname(__FILE__)
Dir.chdir(File.join(File.dirname(__FILE__), "..", ".."))

require 'optparse'

##########################################################
# Default Options
#
ANSIBLE_URL = 'git@github.com:ansible/ansible.git'
MAGICIAN_GIT = 'git@github.com:modular-magician/ansible.git'

IGNORED_MODULES = [
  'lib/ansible/modules/cloud/google/gcp_backend_service.py',
  'lib/ansible/modules/cloud/google/gcp_healthcheck.py',
  'lib/ansible/modules/cloud/google/gcp_target_proxy.py',
  'lib/ansible/modules/cloud/google/gcp_url_map.py',
]

@options = {
  directory: "build/ansible/"
}
###########################################################
# Functions

def git_run(cmd, silent = false, opts = @options)
  silent_cmd = silent ? '>/dev/null 2>&1' : ''
  `pushd #{opts[:directory]} >/dev/null; #{cmd}#{silent_cmd}; popd #{opts[:directory]} > /dev/null`
end

# Check that remotes are in order
def check_remotes(opts = @options)
  # Check git remotes
  remotes = git_run("git remote -v", false, opts)
  remotes = remotes.split("\n")
                   .map { |line| line.split("\t") }
                   .map { |line| { line[0] => line[1].split(" ").first } }
                   .reduce({}, :merge)
  raise "Origin git remote should be set" unless remotes["origin"]
  raise "Upstream git remote should be #{ANSIBLE_URL}" unless remotes["upstream"] == ANSIBLE_URL
end

def get_all_modules(remote)
  git_run("git fetch #{remote} devel", true)
  git_run("git checkout #{remote}/devel", true)
  files = git_run("git ls-files -- lib/ansible/modules/cloud/google/gcp_*")
  files.split("\n")
       .reject { |line| IGNORED_MODULES.include?(files) }
end
#############################################################
# Main

OptionParser.new do |opts|
  opts.banner = "Usage: run [options]"

  opts.on("--dir", "--directory", "Ansible repo location") do |v|
    @options[:directory] = v
  end
end.parse!

# Check if everything is installed properly.
raise "Please install the hub CLI" unless `hub`
check_remotes

# Add Magician Git repo
git_run("git remote add magician #{MAGICIAN_GIT}", true)

# Find list of all modules.
puts get_all_modules('magician')
